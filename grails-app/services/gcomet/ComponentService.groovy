package gcometimport org.grails.plugin.gcomet.GCometComponentSubscriberimport org.grails.plugin.gcomet.SubscribeMessageimport org.grails.plugin.gcomet.UnsubscribeMessageimport org.grails.plugin.gcomet.UpdateComponentStateMessageimport org.grails.plugin.gcomet.GetComponentStateMessageimport org.grails.plugin.gcomet.GCometComponentStateclass ComponentService {	static scope = 'session'	def subscribers = []		def subscribeCurrentUserTo(component){		if (isCurrentUserSubscribedTo(component)) return		def subscriber = new GCometComponentSubscriber(subscribedTo: component.name)		subscriber.start()		subscribe(subscriber, component)		subscribers << subscriber	}		def subscribe(subscriber, component) {		component << new SubscribeMessage(subscriber: subscriber)	}		def unsubscribe(subscriber, component) {		component << new UnsubscribeMessage(subscriber: subscriber)	}		def update(GCometComponentState state, component) {		component << new UpdateComponentStateMessage(state: state.clone())	}		def retrieveStateUpdatesForUser(){		subscribers.collectMany{[it.sendAndWait(new GetComponentStateMessage())]}	}		def isCurrentUserSubscribedTo(component){		return subscribers.any {it.subscribedTo == component.name}	}}